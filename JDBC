是一个独立于特定数据库管理系统，通用的SQL数据库存取和操作的公共接口
一、获取数据库连接
 1、Driver接口：
        url:http://localhost:8080/gmall/keyboard.jpg
        jdbc:mysql协议
        localhost:ip地址
        3306:端口号
        test:test数据库
 //1、提供三个连接的基本信息
    String url="jdbc:mysql://localhost:3306/sys";
    String user="root";
    String password="root";
    //2、获取Driver实现类对象
    Class.forName("com.mysql.cj.jdbc.Driver");
    //3、获取连接
    Connection a = DriverManager.getConnection(url, user, password);
***********************************************************************************************
相较于方式三可以省略注册驱动
    原因：在mysql的Driver实现类中，声明了静态方法，而静态方法随着类的加载而加载
第二步可以省略，连接MySQL数据库可以省略，其他数据库则不行
5、
  @Test//(final)将数据库连接需要的4个基本信息声明在配置文件中，通过读取配置文件的方式获取连接
    public void A() throws Exception {
        //读取配置文件的基本信息
        InputStream i = test5.class.getClassLoader().getResourceAsStream("jdbc.properties");
        Properties p = new Properties();
        p.load(i);
        String user = p.getProperty("user");
        String password = p.getProperty("password");
        String url= p.getProperty("url");
        String driverClass = p.getProperty("driverClass");
        //2、加载驱动
        Class.forName(driverClass);
        //3、获取连接
        Connection c = DriverManager.getConnection(url, user, password);
        System.out.println(c);
    }
********************************************************************************************************
好处：实现了数据和代码的分离。实现了解耦
     如果需要修改配置文件信息，可以避免程序重新打包
ORM编程思想：
   一个数据表对应一个java类
  表中的一条记录对应java类的一个对象
  表中的一个字段对应java类中的一个属性
数据库事务：
   事务：一组逻辑操作单元(一行或多行DML操作(一个或多个数据库操作语句))，使数据从一种状态换到另一种状态(数据的变换)
   事务处理(事务操作)的原则：
        保证事务都要作为一个工作单元来执行，即使出现了故障，都不改变这种执行方式。当在一个事务中执行多个操作时，要么所有事务都被提交，要么这些
     修改就永久的保存下来，要么数据库管理系统将放弃所作的所有修改，整个事务回滚
        为确保数据库的一致性，数据的操作应当时离散的成组的逻辑单元：当它全部完成时，数据的一致性可以保持，而当这个单元中的一部分操作失败，整个事
     务应全部视为错误，所有从起始点以后的操作全部退回到开始状态
   数据一旦提交不可回滚
      那些操作会导致数据的自动提交？
       >DDL操作一旦执行，都会自动提交
            >set autocommot=false对DDL失效
       >DML默认情况下一旦执行，都会自动提交
            >可以通过set autocommot=false的方式取消DML操作的自动提交
       >默认关闭连接时，会将尚未提交的操作自动提交