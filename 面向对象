一、方法
  1、创建类：格式 ：class 类名{  }
          注意：类名首字母必须大写
  2、权限修饰符：public和private
   (1)public（公有） 使用在类中，用public修饰则可以在其他类调用即在内外部皆可调用。
  （2）private（私有）  使用在类中，用private修饰则不可以在其他类调用即在外部不可调用，只在此类可以调用。
 3、取值器和赋值器：
   (1)取值器：public 字段变量类型 get字段名（）{
       return this.字段变量;
   }
   (2)赋值器：public void set字段名（字段数据类型  参数名）{
       this.字段变量=参数;
   }
注意：字段名首字母大写，void是返回
4、封装：  取值器和赋值器通过设置访问规则来保护变量
       注意：封装只对私有字段有效
             取值器和赋值器可以有，也可以没有
5、调用：变量名.调用对象
/*例子：
public class Main{
          public  static void main(String []args){
                 Perpeo p1=new Perpeo();
                 p1.name="小花";
                 p2.age=15;
            System.out.println("姓名"+p1.name+"年龄"+p1.age);
         }
   }
class Perpeo{
    private String name;
    private int age;
 public String getName(){
     return this.name;
 }
 public void setName(Strng name){
     this.name=name;
 }
 public int getAge(){
     return this.age;
 }
 public void setAge(int age){
     this.age=age;
 }
}
  **运行结果：姓名：小花  年龄：15 **
二、构造方法
1、格式：
    public 类名（参数）{
     this.变量名=参数；
     this.变量名=参数；        
    }
2、一个类中若没有构造方法，则系统自动构造一个空的构造方法;想要使用带参数的构造方法，又不想要保留带参数的构造方法时，则需要构造一个空的构造方法。
   构造方法没有返回值，即没有void。
3、调用构造方法需要用new来调用。
/*例子：
public class Main {                                                  public class Main {                                           
    public static void main(String[] args) {                                 public static void main(String[] args) {
        Person p1=new Person("小明",12);                                                Person p1=new Person("小明",12);
        System.out.println(p1.getName()+p1.getAge());                                   Person p1=new Person();
    }                                                                                    p1.name="小明"；
}                                                                                        p1.age=12;
                                                                          }
class Person{                                                          }
    priavte String name;                                              class Person{    
    private  int  age;                                                      private  String name;
    public Person(String name,int age){                                     private int  age;
        this.name=name;                                                     public Person(String name, int age ){
         this.age=age;                                                             this.name=name;     
    }                                                                               this.age=age;
    public String  getName(){                                                      }
        return this.name;                                                   public String  getName(){      
    }                                                                                reurn this.name;
    public int getAge(){                                                        }
        return this.age;                                                    public int getAge(){
    }                                                                            return this.age;
}                                                                              }
                                                                             public Person (){}
                                                                                 } 
                                                                           }
三、方法重载：
1、方法相同，参数不同的两个方法可构成重载。
/*例子：
public void name (String name){
    this.name=name;
}   
public void name(String name,int age){
    this.name=name;
    this.age=age;
}                                                                        
四、继承
1、extends来继承类。
2、格式：class 子类 extends 父类{
                //定义新增的方法
         }
子类就是继承类，父类就是被继承类。
注意：1、子类新增的方法名不能与父类相同。
      2、一个子类只能继承一个父类，但一个父类可以被多个子类继承。
      3、子类无法访问父类的priavte字段，需将private改为protected,可被子类访问。
      4、子类若调用父类中的字段则需要用super.变量名，调用。
      5、子类可以向上转型为父类。/*例子：子类名 变量=new 父类名（）； 可以将子类安全、完全的转换为父类。
      6、向下转型：即父类转换为子类。父类子类都有的则可以转型，子类有父类没有则不可以。
/*例子：