SQL语句可以单行或者多行书写，以分号结尾
SQL语句可以使用空格/缩进来增强语句的可读性
Myaql数据库的SQL语句不区分大小写，关键字建议使用大写
注释：
  单行注释：--注释内容或#注释内容（Mysql特有）
  多行注释：/*注释内容*/
二、分类：
 DDL语句：数据定义语言，用来定义数据库对象（数据库、表、字段）
 DML语句：数据库操作语言，用来对数据库表中的数据进行增删改
 DQL语句：数据库查询语句，用来查询数据库中表的记录
 DCL语句：数据库控制语言，用来创建数据库用户、控制数据库的访问权限
 （一）DDL：
  1、 数据库：
     SHOW DATABASES：查询所有数据库
     SELECT DATABASE():查询当前数据库
     CREATE DATABASE[IF NOT EXISTS （如果这个数据库不存在则创建，如果存在则不创建）]数据库名[DEFAULT CHARSET 字符集][COLLATE 排序规则]：创建数据库
     DROP DATABASE[IF EXISTS(如果存在则删除)]数据库名：删除数据库
     USE 数据库名：使用数据库
  2、表操作-查询
    SHOW TABLES：查询当前数据库所有表名称
    DESC表名：查询表结构
    SHOW CREATE TABLE 表名：查询指定表的建表语句
   表操作-：创建
    CREATE TABLE [if not extists] 表名{
        字段1  类型[（宽度）]  [约束条件]  [COMMENT 字段1注释],
        .......
        字段n  类型[（宽度）]  [约束条件]  [COMMENT 字段1注释],
    }[COMMENT 表注释];
    注意[.....]为可选参数，最后一个字段后面没有都好
    删除表：
         dro table 表明；
         truncate table 表名；(删除表后再创建一个同名的表（初始化）)
    3、修改表添加列
      alter table 表明 add列名 类型（长度）[约束];
    修改列名和类型
      alter table 表名 change 旧列名 类型（长度）约束;
    修改表/删除列：
     alter table 表名 drop 列名；
    修改表名：
    alter table 表名  rename to 新表名;
    修改字段类型：
    TABLE 表名 MODIFY 字段名 新数据类型（长度）;
    修改字段名和字段类型：
     ALTAER TABLE 表名 CHANGE 旧字段名 新字段名 类型（长度） [COMMENT注释][约束];
（二）DML：
 insert:增加、添加、插入数据
 update:修改数据
 delete:删除语句
 1、insert：
  给指定字段(列)添加数据：
     intsert into 表名(字段1,字段名2,...) values(值1,值2,...);
  给全部字段添加数据：
     insert into 表名 values(值1,值2..);
  批量添加数据：
     (指定字段)insert into 表名(字段名1,字段名2..) values(值1,值2..),(值1,值2..),(值1,值2..);
     (所有字段)insert into 表名 values (值1,值2,..),(值1,值2,..),(值1,值2,..);
2、update:
 修改字段值
     update 表名 set 字段名1=值1,字段名2=值2,...[where 条件];
 删除数据：
     delete from 表明 [where 条件];
(三)DQL
     SELECT（关键字）
1、基本查询：
    （1）查询多个字段
        select 字段1,字段2,..from 表名;
        select*表名;
      (2)设置别名：
         select 字段1,[AS 别名1],字段2[AS 别名2]..from 表名;
       (3)去除重复查询
          select distinct 字段列表 from 表名; 
2、条件查询
      select 字段列表 from 表名 where 条件列表;
    条件：
      比较运算符：
      between .. and ..    在某个范围之内
      in(...)   在in之后的列表中的值，多选一
      like 占位符   模糊匹配(_匹配单个字符，%匹配任意个字符)
      is null 是null
      <>/!=   不等于
      逻辑运算符
          and/&&   与
          or/||    或
          not/!    非/不是
3、聚合函数：
将一列数据作为一个整体，进行纵向
count:统计数量
max:最大函数
min:最小函数
avg：平均值
sum：求和
select 聚合函数(字段列表) from表名;
4、分组查询：
select 字段列表 from 表名 [where 条件] group by分组字段名 [having 分组后过滤条件];
where 和having区别：
执行时机不同：where是分组前进行过滤，不满足where条件，不参与分组；而having是分组后对结果进行过滤
判断条件不同：where不能对聚合函数进行判断，而having可以；
查询字段一般为聚合字段和分组字段，查询其他字段无任何意义
5、排序查询
select 字段名 from 表名 order by 字段1 排序方式1,字段2 排序方式2;
排序方式：
asc：升序(默认值)
desc:降序
6、分页查询
select 字段列表 from 表名 limit 起始索引,查询记录数;
起始索引：从0开始，其实索引=(查询页码-1)*每页记录数
第一页可以省略 简写limit10
(四)DCL
用户管理：
  (1)查询用户：use mysql;
      select*from user;
   (2)创建用户：
         create user '用户名'@'主机名' identified by '密码';
    本机：localhost
    任意主机：%
    (3)修改用户密码
         alter user '用户名'@'主机名' identified with mysql_native_password by '新密码';
    (4)删除用户
         drop user'用户名'@'主机名';
权限控制：
    所有权限    all,all privileges
    查询权限    select
    查询权限     insert
    修改数据     update  
    删除数据     delecte
    修改表       alter
    删除数据库/表/视图   drop
    创建数据库/表    create
 查询权限：
    show grants for '用户名'@'主机名';
  授予权限:
    grant 权限列表 on 数据库名.表名 to '用户名'@'主机名';
   撤销权限
     revoke 权限列表 on 数据库名.表名 from '用户名'@'主机名';
     
三、数据类型
   数值类型：INT/INTEGER 整数
            FLOAT        单精  浮点型
            DOUBLE       双精  浮点型
            DECIMAL       小数值
   字符串类型：CHAR  定长字符串
              VARCHAR()  变长字符串
    日期类型：DATE   YYYY-MM-DD   日期值
             TIME    HH:MM:SS    时间值（时分秒）
             YEAR     YYYY        年份值
             DATETIME   YYYY-MM-DD HH:MM:SS 混合日期值
             TIMESTAMP   YYYYMMDD HHMMSS    时间戳  
四、关系模型
 概念：本质上就是若干个存储数据的二维表
一、主键(一对一)
  概念：关系表有一个很重要的约束，就是任意两条记录不能重复。
           不能重复：通过某个字段唯一区分出不同记录； 这个字段就是主键
  要求：记录一旦插入最好不要修改主键，主键是唯一区分记录的，一旦修改后果严重
  选取主键基本原则：不适用任何业务相关的字段当主键
  通常将主键命名为id：
    自增类型、全局唯一G类型
  联合主键：
     概念：关系数据库实际上允许多个字段都设置为主键，这种主键就被成为联合主键
二、外键(一对多)
   概念：通过关系表中的一个表查询到另一个表和本表的记录
设置外键：FOREING KEY(外键名)
将这个字段关联到表A的B字段：REFERENGCES 表名A(字段名B);
通过定义外键约束，关系数据库可以保证无法插入无效数据
删除外键约束：DROP FOREING KEY 外键名;
